// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  name      String   @db.VarChar(255)
  format    String
  size      String
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  downloads Int      @default(0)
  deleted   Boolean  @default(false)
  published Boolean  @default(false)
  timestamp DateTime @default(now()) @db.Timestamp(6)
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @db.VarChar(32)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar
  verified  Boolean   @default(false)
  role      Int       @default(0) @db.SmallInt
  files     File[]
  sessions  Session[]
  logs      UserLog[]
  plan      Int       @default(0) @db.SmallInt
  avatar    String?   @db.VarChar
  bio       String?   @db.VarChar(320)
  requests  Int       @default(0)
  storage   Int       @default(0)
  deleted   Boolean   @default(false)
  timestamp DateTime  @default(now()) @db.Timestamp(6)
}

model Session {
  id        Int      @id @default(autoincrement())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  token     String   @unique @default(uuid())
  data      String
  iv        String
  type      Int      @default(0) @db.SmallInt
  expire    DateTime
  timestamp DateTime @default(now()) @db.Timestamp(6)
}

model UserLog {
  id        Int      @id @default(autoincrement())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  content   String
  timestamp DateTime @default(now()) @db.Timestamp(6)
} 

model BusinessPlan {
  id                             Int     @id @default(autoincrement())
  userId                         Int
  storage                        Int     @default(0)
  limitedPartSize                Int     @default(25000000)
  gateawayRequets                Int     @default(0)
  gateawayLimitPartSize          Int     @default(5000000)
  manageAccessPremissionForUsers Boolean @default(true)
}
